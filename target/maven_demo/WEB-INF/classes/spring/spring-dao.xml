<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--配置整合mybatis过程-->
    <!-- 1. 配置数据库相关参数
         properties的属性：${url} ${driver} ${user} ${password}
         一定要加system-properties-mode，如果不加数据库可能连接失败
         <context:property-placeholder location="classpath:jdbc.properties"/>
    -->
    <context:property-placeholder location="classpath:jdbc.properties" system-properties-mode="NEVER"/>
    <!-- 2：数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${username}"/>
        <property name="password" value="${password}"/>

        <!--c3p0 配置连接池的私有属性 -->
        <property name="maxPoolSize" value="30"/> <!-- 最多保持30个数据库连接对象-->
        <property name="minPoolSize" value="10"/>
        <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间-->
        <property name="checkoutTimeout" value="1000"/>
        <!-- 当获取连接失败 重试次数-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>

    <!-- 3: 配置SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>  <!-- ref的参数就是第2步的bean id = "dataSource"-->
        <!-- 配置MyBatis全局配置文件：mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/> <!-- classpath: 指java和resource下面的文件-->
        <!-- 扫描entity包， 使用别名 例如： org.seckill.entity.Seckill  配置之后可以直接使用Seckill-->
        <property name="typeAliasesPackage" value="org.seckill.entity"/> <!--配置多个包时，使用分号隔开-->
        <!-- 扫描sql配置文件：mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4: 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包-->
        <property name="basePackage" value="org.seckill.dao"/>
    </bean>

    <!--3 4 mabatis spring 整合，使用更少的代码，同时方便灵活的维护-->
</beans>